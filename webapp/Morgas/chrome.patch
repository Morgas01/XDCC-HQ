diff --git a/build/Morgas.Listeners.js b/build/Morgas.Listeners.js
index a18df91..9902316 100644
--- a/build/Morgas.Listeners.js
+++ b/build/Morgas.Listeners.js
@@ -134,8 +134,9 @@
 			if(!this.disabled)
 			{
 				var run=true;
-                for(var [scope,entry] of this.listeners)
+                for(var entries=this.listeners.entries(),entryStep=entries.next();!entryStep.done;entryStep=entries.next())
                 {
+					var scope=entryStep.value[0],entry=entryStep.value[1];
                     var it=entry.first.values();
                     var step=undefined;
                     var value=undefined;
diff --git a/src/DB/Morgas.DB.IndexedDBConnector.js b/src/DB/Morgas.DB.IndexedDBConnector.js
index 1ce7d78..ca360ed 100644
--- a/src/DB/Morgas.DB.IndexedDBConnector.js
+++ b/src/DB/Morgas.DB.IndexedDBConnector.js
@@ -231,7 +231,7 @@
 						return new SC.det(reqs).then(function()
 						{
 							db.close();
-							signal.complete(Array.slice(arguments));
+							signal.complete(Array.prototype.slice.call(arguments));
 							this.complete();
 						},µ.debug);
 					});
diff --git a/src/Morgas.Detached.js b/src/Morgas.Detached.js
index 8641b1b..f0be14a 100644
--- a/src/Morgas.Detached.js
+++ b/src/Morgas.Detached.js
@@ -79,7 +79,7 @@
 			},
 			function()
 			{
-				_self._setStatus(-1,Array.slice(arguments,0));
+				_self._setStatus(-1,Array.prototype.slice.call(arguments,0));
 			});
 		},
 		_setStatus:function(status,args)
@@ -209,7 +209,7 @@
 		scope=scope||window;
 		return function()
 		{
-			var args=Array.slice(arguments,0);
+			var args=Array.prototype.slice.call(arguments,0);
 			return new DET(function()
 			{
 				args.unshift(this);
diff --git a/src/Morgas.Listeners.js b/src/Morgas.Listeners.js
index f92747a..d499841 100644
--- a/src/Morgas.Listeners.js
+++ b/src/Morgas.Listeners.js
@@ -134,8 +134,9 @@
 			if(!this.disabled)
 			{
 				var run=true;
-                for(var [scope,entry] of this.listeners)
+                for(var entries=this.listeners.entries(),entryStep=entries.next();!entryStep.done;entryStep=entries.next())
                 {
+					var scope=entryStep.value[0],entry=entryStep.value[1];
                     var it=entry.first.values();
                     var step=undefined;
                     var value=undefined;
diff --git a/src/Worker/Morgas.BaseWorker.js b/src/Worker/Morgas.BaseWorker.js
index dc4656f..301c684 100644
--- a/src/Worker/Morgas.BaseWorker.js
+++ b/src/Worker/Morgas.BaseWorker.js
@@ -1,6 +1,6 @@
 self.onmessage=function init(initEvent)
 {
-	var [initRequest,config]=initEvent.data.args;
+	var initRequest=initEvent.data.args[0],config=initEvent.data.args[1];
 	//load Morgas.js
 	importScripts(config.basePath+config.morgasPath);
 	
@@ -60,7 +60,7 @@ self.onmessage=function init(initEvent)
 		{
 			i=1;
 		}
-		self.importScripts.apply(self,Array.slice(arguments,i).map(s=>config.basePath+s));
+		self.importScripts.apply(self,Array.prototype.slice.call(arguments,i).map(function(s){return config.basePath+s;}));
 		
 		if(i===1) self.respond(_request,true);
 	};
@@ -70,11 +70,11 @@ self.onmessage=function init(initEvent)
 	 * @param {string} module
 	 * @param {any} ...args
 	 */
-	self.util=function(request,module,...args)
+	self.util=function(request,module)
 	{
 		if(µ.hasModule(module))
 		{
-			self.respond(request,true,µ.getModule(module)(...args));
+			self.respond(request,true,µ.getModule(module).apply(self,Array.prototype.slice.call(arguments,2)));
 		}
 		else
 		{
